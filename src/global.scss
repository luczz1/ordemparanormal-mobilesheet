/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "@ionic/angular/css/normalize.css";
@import "@ionic/angular/css/structure.css";
@import "@ionic/angular/css/typography.css";
@import "@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
@import "@ionic/angular/css/padding.css";
@import "@ionic/angular/css/float-elements.css";
@import "@ionic/angular/css/text-alignment.css";
@import "@ionic/angular/css/text-transformation.css";
@import "@ionic/angular/css/flex-utils.css";

ion-button {
  text-transform: none;
  --padding-top: 24px;
  --padding-bottom: 24px;
}

.menu,
ion-tabs {
  max-width: 1200px;
  margin: auto;
}

@font-face {
  font-family: DefaultFont;
  src: url(/assets/font/adobehebrew-regular.otf);
}

@font-face {
  font-family: SpecialFont;
  src: url(/assets/font/F-STEIN_.TTF);
}

@font-face {
  font-family: Girassol;
  src: url(/assets/font/Girassol-Regular.ttf);
}

* {
  font-family: DefaultFont;
}

ion-scroll[direction="x"] {
  width: 100vw;
}
ion-scroll[direction="y"] {
  height: 100vh;
}

.custom-loading {
  --background: #121212;
}

.custom-loading-backdrop {
  --backdrop-color: #121212;
  --backdrop-opacity: 1;
}

.alert-wrapper {
  width: 90% !important;
  max-width: 90% !important;
}

.error-msg {
  text-align: center !important;
}
.custom-alert .alert-button-group {
  margin-top: 1.6em;
}
.sc-ion-alert-ios {
  margin-top: 0 !important;
}

.alert-wrapper.sc-ion-alert-md {
  button.alert-button.alert-button-confirm {
    color: var(--ion-color-main);
    width: 50%;
    position: fixed;
    right: 0;
    top: 68%;
    transition: 0.4s;
    border-top-right-radius: 0.5em;
    border-bottom-right-radius: 0.5em;
  }

  .alert-title.sc-ion-alert-md {
    text-align: center;
  }
  .alert-button-inner.sc-ion-alert-md {
    justify-content: center !important;
  }

  button.alert-button.alert-button-cancel {
    color: var(--ion-color-medium);
    width: 50%;
    position: fixed;
    left: 0;
    top: 68%;
    margin-left: 0.5em;
    transition: 0.4s;
    border-top-left-radius: 0.5em;
    border-bottom-left-radius: 0.5em;
  }
}

.custom-loading {
  --spinner-color: var(--ion-color-main);
}

.active-tab {
  color: var(--ion-color-main);
}

.NgxEditor__MenuBar,
.NgxEditor,
.NgxEditor__MenuItem--Button,
.NgxEditor__Popup--Form > button {
  background: none !important;
}
.NgxEditor {
  color: #fff !important;
}
.NgxEditor__MenuBar {
  border-bottom: 1px solid #3b3b3b !important;
}

.NgxEditor__Dropdown .NgxEditor__Dropdown--DropdownMenu,
.NgxEditor__Popup,
.NgxEditor__MenuItem--Active,
.NgxEditor__MenuItem:hover {
  background-color: #222222 !important;
}

.NgxEditor__Content {
  min-height: 60vh !important;
}

.NgxEditor__Wrapper {
  border: 1px solid #3b3b3b !important;
}

.NgxEditor__Dropdown .NgxEditor__Dropdown--Active,
.NgxEditor__Dropdown .NgxEditor__Dropdown--Selected,
.NgxEditor__Dropdown .NgxEditor__Dropdown--Item:hover,
.NgxEditor__Dropdown .NgxEditor__Dropdown--Open {
  background-color: #1a1a1a !important;
}

.NgxEditor__Popup {
  margin-right: 6em;
}

.alert-wrapper {
  max-width: 800px !important;
  border: 2px solid var(--ion-color-dark);
}

ion-modal {
  --max-width: 800px !important;
  --border-width: 2px;
  --border-style: solid;
  --border-color: var(--ion-color-dark);
  --backdrop-opacity: 0.8;
}

ion-icon:hover {
  cursor: pointer;
}

@media (min-width: 500px) {
  ion-modal {
    --min-width: 500px;
  }
}
